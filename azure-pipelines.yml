# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:    
  - group: spaccess
  - name: tfplan
    value: mytf
  
pool: ubuntu
trigger:
- dev
stages:
  - stage: TerraformInitAndPlan
    jobs:
      - job: init
        steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              # Write your commands here
              terraform version
              terraform init -upgrade
          env:
            ARM_CLIENT_ID: $(ARM-CLIENT-ID)
            ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
            ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
            ARM_TENANT_ID: $(ARM-TENANT-ID)
          displayName: Terraform init        
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script:  |
              terraform fmt          
          displayName: Terraform fmt
  
        
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script:  |
              sudo chmod -R 755 .
              terraform validate
          env:
            ARM_CLIENT_ID: $(ARM-CLIENT-ID)
            ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
            ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
            ARM_TENANT_ID: $(ARM-TENANT-ID)                        
          displayName: Terraform validate
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script:  |
              sudo chmod -R 755 .
              export TF_VAR_gitpass='$(azuregitpass)'
              terraform plan -out='$(tfplan)'
          env:
           ARM_CLIENT_ID: $(ARM-CLIENT-ID)
           ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
           ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
           ARM_TENANT_ID: $(ARM-TENANT-ID)
          displayName: Terraform plan
            
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Pipeline.Workspace)'
            artifact: 'tfplan'
            publishLocation: 'pipeline'
              
  - stage: TerraformApply
    dependsOn: TerraformInitAndPlan
    condition: succeeded('TerraformInitAndPlan')
    jobs:
      - job: Apply      
        steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            buildType: 'current'
            artifactName: 'tfplan'
            targetPath: '$(Pipeline.Workspace)'
          displayName: 'Download Terraform Plan Artifact'
          
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |   
              #cd '$(Pipeline.Workspace)' 
              sudo chmod -R 755 .    
              export TF_VAR_gitpass='$(azuregitpass)'         
              terraform apply --auto-approve '$(tfplan)'
          env:
           ARM_CLIENT_ID: $(ARM-CLIENT-ID)
           ARM_CLIENT_SECRET: $(ARM-CLIENT-SECRET)
           ARM_SUBSCRIPTION_ID: $(ARM-SUBSCRIPTION-ID)
           ARM_TENANT_ID: $(ARM-TENANT-ID)
          displayName: Terraform Apply   
        

